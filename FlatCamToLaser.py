#!/usr/bin/env python3
import configparser
import sys

# Импортируем библиотеку configparser
config = configparser.ConfigParser()

# Загружаем конфигурационный файл
config.read("config")

SPEED_LASER = config.get("settings", "speed_laser")
POWER_LASER = config.get("settings", "power_laser")
FLATCAM_VERSION = "v8.991"

# Читаем названия файла G-code
try:
    file_path = sys.argv[1]
except IndexError:
    print("Пожалуйста, введите название файла G-code.")


# Функция проверки версии FLATCAM
def check_flatcam_version(line):
    if line.startswith("(G-CODE GENERATED BY FLATCAM"):
        parts = line.split()
        str_version = parts[4]
        if str_version != FLATCAM_VERSION:
            raise ValueError(
                "Версия FLATCAM возможно не совместима с данным скриптом."
            )
        return True
    return False


# Функция поиска скорости лазера
def check_speed_laser(line):
    if line.startswith("(Feedrate: "):
        parts = line.split()
        speed_laser = float(parts[1])
        return speed_laser
    return False


# Функция поиска минимального и максимального значения X
def find_min_max_x(line):
    if line.startswith("(X range"):
        parts = line.split()
        x_range_min = float(parts[2])
        x_range_max = float(parts[4])
        return x_range_min, x_range_max
    return False


# Ищем минимальное и максимальное значение X и Y
def find_min_max_y(line):
    if line.startswith("(Y range"):
        parts = line.split()
        y_range_min = float(parts[2])
        y_range_max = float(parts[4])
        return y_range_min, y_range_max
    return False


# Создаем генератор чтения файла
def read_file_generator(file_path):
    with open(file_path, "r") as file:
        for line in file:
            yield line


# Цикл чтения и обработки файла G-code
read_file = read_file_generator(file_path)


# Проверяем версию FLATCAM
try:
    while not check_flatcam_version(next(read_file)):
        next(read_file)
except ValueError as e:
    print(e)
except StopIteration:
    print("Не найдена версия FLATCAM. Скорее всего файл уже модифицировали.")
    sys.exit(1)

# Получаем скорость лазера
try:
    speed_laser = check_speed_laser(next(read_file))
    while not speed_laser:
        speed_laser = check_speed_laser(next(read_file))
except ValueError as e:
    print(e)
except StopIteration:
    print("Не найдена скорость лазера. Скорее всего файл уже модифицировали.")
    sys.exit(1)


# Ищем минимальное и максимальное значение X
try:
    x_coordinates = find_min_max_x(next(read_file))
    while not x_coordinates:
        x_coordinates = find_min_max_x(next(read_file))
    # Вычитаем и прибавляем миллиметр
    if x_coordinates:
        x_min, x_max = x_coordinates
        x_min_test = x_min - 1
        x_max_test = x_max + 1
        # Проверяем, что минимальное значение не меньше нуля
        if x_min_test < 0:
            x_min_temp = x_min_test
            x_min_test = 0.0001
            raise ValueError(
                f"Внимание! Минимальное значение X = {round(x_min_temp, 3)} меньше нуля и было приравнено нулю."
            )
except StopIteration as e:
    print(
        "Все строки G-code прочитаны, координаты Х не найдены. Скорее всего файл уже модифицировали."
    )
    sys.exit(1)
except ValueError as e:
    print(e)


# Ищем минимальное и максимальное значение Y
try:
    y_coordinates = find_min_max_y(next(read_file))
    while not y_coordinates:
        y_coordinates = find_min_max_y(next(read_file))
    # Вычитаем и прибавляем миллиметр
    if y_coordinates:
        y_min, y_max = y_coordinates
        y_min_test = y_min - 1
        y_max_test = y_max + 1
except StopIteration as e:
    print(
        "Все строки G-code прочитаны координатs Y не найдены. Скорее всего файл уже модифицировали."
    )
    sys.exit(1)


# Функция поиска начала места замены
def find_start_replace(read_file_gen):
    line = next(read_file_gen)
    if line.startswith("G00 X"):
        return line.strip()
    return False


# Ищем начало места замены
try:
    start_found = find_start_replace(read_file)
    while not start_found:
        start_found = find_start_replace(read_file)

except StopIteration:
    print(
        "Не найдена начало места замены. Скорее всего файл уже модифицировали."
    )
    sys.exit(1)

# print(
#     f"Speed laser: {speed_laser} type {type(speed_laser)}.\n"
#     f"x_min: {x_min} type {type(x_min)}.\n"
#     f"x_min_test: {x_min_test} type {type(x_min_test)}.\n"
#     f"x_max: {x_max} type {type(x_max)}.\n"
#     f"x_max_test: {x_max_test} type {type(x_max_test)}.\n"
#     f"y_min: {y_min} type {type(y_min)}.\n"
#     f"y_min_test: {y_min_test} type {type(y_min_test)}.\n"
#     f"y_max: {y_max} type {type(y_max)}.\n"
#     f"y_max_test: {y_max_test} type {type(y_max_test)}.\n"
# )

# Записываем алгоритм начала прожига
start = f"""M107                                ; Выключаем лазер
G00 F1000.00                        ; Задаем максимальную скорость для перемещения 
G28                                 ; Возвращаемся по всем осям домой
G00 Z40.0000                        ; Поднятие оси Z

G21
G90

M107                                ; Включаем лазер
G00 X{x_min_test} Y{y_min_test}     ; Минимальная точка(минимальное положение головки минус миллиметр)
M106 S01                            ; Прицеливание
M0                                  ; Пауза

M107                                ; Включаем лазер
G00 X{x_max_test} Y{y_max_test}     ; Максимальная точка(максимальное положение головки плюс миллиметр)
M106 S01                            ; Прицеливание
M0                                  ; Пауза
M107                                ; Выключаем лазер


{start_found}                       ; Возращаемся к исходной точке
; Дальше идет замена
"""

# Записываем в файл
with open("laser-" + file_path, "w") as file:
    file.write(start)

    # Цикл обработки G-code
    for line in read_file:

        # Заменяем поднятие оси Z на остановку вентилятора
        line = line.replace("G00 Z2.0000", "M107")

        # Пропускаем установку скорости шпинделя
        line = line.replace("G01 F60.00\n", "")

        # Заменяем включение фрезы на включение лазера
        line = line.replace("G01 Z-2.4000", f"M106 S{POWER_LASER}")

        # Замеяем скорость на свою
        line = line.replace(f"G01 F{int(speed_laser)}", f"G01 F{SPEED_LASER}")

        if line == "M05\n":
            for _ in read_file:
                next(read_file)
            line = "G28 ; Возвращаемся домой\n"

        file.write(line)

print("Done!")
